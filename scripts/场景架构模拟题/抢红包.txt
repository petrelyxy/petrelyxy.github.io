
1. 首先应该根据SLA 压测结果进行限流， 比如使用令牌桶算法， 高于预期qps则该次请求失败 + 
2. 把能提前做的都提前做了， 比如将奖金池提前random分好为n个， 将其放入redis list中， 若list过大， 则拆分为多个list。
 client request -> pop list -> 若为空， 则说明已经抢完了， 返回给用户告知抢失败； 若有， 则说明抢到了一个红包，将用户信息与红包金额整合为交易信息，推送到
kafka，需要全链路exactly-once，推送需要ACK=ALL， 推送成功后可以返回给用户抢红包成功， 由下游交易系统消费kafka进行交易处理。

3 . 为啥红包金额放在redis，-》因为redis集群由高可用方案， 如果放在本地服务， 在抢购中间该服务崩了，就有一部分红包没有发出去， 如果可以接受的话，也可以将红包金额平分到每个服务实例， 由服务实例提前random好并保存在本地列表。
     那么这个时候应当使用什么数据结构呢？

4. redis崩了咋办